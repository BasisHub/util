0010 REM - RECEIVE PROGRAMS AND DATA FROM OTHER BUSINESS BASICS
0020 REM - <BXRCV>
0030 REM - (C) COPYRIGHT 1985, 1998 BASIS INTL. LTD.  ALL RIGHTS RESERVED.
0100 REM 100 - SETUP
0110 BEGIN 
0120 LET ERRCOUNT=0
0130 LET BEG$="<<BXBEGIN>>",EOF$="<<EOF>>"
0140 PRINT 'CS',"RECEIVE PROGRAMS AND DATA SENT FROM OTHER BUSINESS BASICS",'LF'
0150 INPUT "INPUT FILE: ",INFILE$
0160 IF INFILE$="" THEN STOP
0170 OPEN (7,ERR=0180)INFILE$; GOTO 0190
0180 PRINT 'RB',"CAN'T OPEN ",INFILE$; GOTO 0150
0190 LET F$=FID(7); IF ASC(F$)<16 AND F$(1,1)<>$03$ THEN PRINT 'RB',"NOT A STRING FILE OR A DEVICE"; CLOSE (7); GOTO 0150
0200 IF ASC(F$)>16 THEN GOSUB 8500; LET B9$="COMM" ELSE LET B9$=""
0210 GOSUB 7500; IF B0$="NO" THEN CLOSE (7); GOTO 0150
0220 GOSUB 7000; DIM Z9$(LEN(Z$),$7F$); LET SENDER$=AND(Z$,Z9$); IF SENDER$>"" THEN PRINT "PROGRAMS AND DATA COMING FROM ",SENDER$
0230 GOSUB 10000
0240 INPUT "OUTPUT PREFIX: ",WORKDIR$
0250 IF WORKDIR$="END" OR WORKDIR$="end" THEN STOP
0260 IF WORKDIR$>"" AND POS(WORKDIR$(LEN(WORKDIR$))="/\")=0 THEN LET WORKDIR$=WORKDIR$+"/"
0270 ERASE WORKDIR$+"BXRCV.ERR",ERR=0280; GOTO 0270
0280 STRING WORKDIR$+"BXRCV.ERR",ERR=0290; GOTO 0310
0290 PRINT "UNABLE TO CREATE ",WORKDIR$,"BXRCV.ERR"
0300 GOTO 0240
0310 REM " ESTABLISH PGM HEADER
0320 LET Z$=WORKDIR$+"BXRCV.PGM"
0330 ERASE Z$,ERR=0340; GOTO 0330
0340 PROGRAM Z$,1
0350 SAVE Z$
0360 OPEN (101)Z$
0370 READ RECORD(101,SIZ=10)HEADER$
0380 CLOSE (101)
0390 ERASE Z$
0400 OPEN (100)WORKDIR$+"BXRCV.ERR"
0410 PRINT 'LF',"NOW RECEIVING FILES..."
0420 LET Z0=MASK("","^[0-9]+[ ][;][ ]"); REM ' See PVX conversion (15500-15999)
1000 REM 1000 -- MAIN LOOP
1010 PRINT 'LF',
1020 GOSUB 7000; IF Z$=$$ THEN GOTO 1000
1030 IF Z$=EOF$ THEN GOTO 9000
1040 IF EOF$>$80$ THEN LET Z$(9)=TBL(Z$(9),$7F$)
1050 LET F$=Z$(1,8)+WORKDIR$+Z$(9)
1060 IF F$(1,1)=$04$ THEN LET F$(2,7)=BIN(0,7)
1070 LET F1$=""; IF POS(F$(1,1)=$0626466686C607$) AND F$(2,1)=$00$ THEN GOSUB 7000; IF Z$=EOF$ THEN GOTO 9000 ELSE LET F1$=Z$
1080 LET F$=F$(1,POS(" "<>F$,-1)),F$=F$(1,POS($00$<>F$,-1))
1100 PRINT F$(9),
1110 ERASE F$(9),ERR=1120; GOTO 1110
1120 REM Handle MULTI->VKEYED conversion
1130 LET MULTI_TO_VKEYED=F$(1,1)=$F6$; IF F$(1,1)<>$02$ AND AND(F$(1,1),$06$)<>$06$ THEN GOTO 1160
1140 LET F$(1,1)=$06$,F$(3,4)=$00000000$; REM "convert direct/sort to single key VKEYED here ...
1150 IF MULTI_TO_VKEYED THEN GOTO 1220
1160 REM 
1170 IF F1$>"" THEN FILE F$,F1$,ERR=1180; GOTO 1230 ELSE FILE F$,ERR=1180; GOTO 1230
1180 LET E$="CANNOT CREATE (ERROR="+STR(ERR)+"): "+HTA(F$); GOSUB 6500
1190 REM - SKIP CURRENT FILE
1200 GOSUB 7000; IF Z$<>EOF$ THEN GOTO 1200
1210 GOTO 1000
1220 REM - TRY TO BUILD FILE
1230 IF F$(1,1)<>$04$ THEN GOTO 3000
1240 OPEN (1)F$(9)
2000 REM 2000 -- PROGRAM FILE
2010 LET HASH$=$0000$
2020 DIM Z$(10,$00$)
2030 WRITE RECORD(1)Z$
2040 LET LENGTH=10
2050 LET VAR$=""
2060 REM - LOOP FOR EACH LINE
2070 PRINT ".",
2080 GOSUB 7000; IF Z$=EOF$ THEN GOTO 2200
2090 GOSUB 15000
2100 LET Z$=Z0$
2110 LET C$=CPL(Z$,VAR$,ERR=2120); GOTO 2160
2120 REM - CAN'T COMPILE LINE - CREATE ERROR LINE
2130 LET E$=Z$; GOSUB 6500
2140 LET Z=NUM(Z$(1,5)),Z$=$14$+CHR(ERR)+Z$(6)
2150 LET C$=BIN(Z,2)+BIN(LEN(Z$),2)+Z$
2160 LET Z=DEC(C$(3,2))+4; IF Z<>LEN(C$) THEN LET VAR$=C$(Z+1),C$=C$(1,Z)
2170 LET HASH$=HSH(C$,HASH$),LENGTH=LENGTH+LEN(C$)
2180 WRITE RECORD(1,ERR=2190)C$; GOTO 2060
2190 PRINT 'LF','RB',"UNABLE TO CONTINUE BUILDING PROGRAMS!"; ESCAPE
2200 REM " END OF PROGRAM LINES
2210 LET VAR$=$FFFF000110$+VAR$; REM -- DON'T FORGET DUMMY END STATEMENT
2220 LET HASH$=HSH(VAR$,HASH$)
2230 WRITE RECORD(1)VAR$
2240 WRITE RECORD(1)HASH$
2250 LET LENGTH=LENGTH+LEN(VAR$)+2
2260 REM -- COUNT # VARIABLES IN TABLE
2270 LET Z=6,COUNT=0
2280 IF Z<LEN(VAR$) THEN LET COUNT=COUNT+1,Z=Z+ASC(VAR$(Z))+1; GOTO 2280
2290 REM -- CREATE PROGRAM HEADER
2300 LET Z$=HEADER$
2310 LET SYMTAB=LENGTH-LEN(VAR$)+3
2320 LET Z=MOD(SYMTAB,65536),Z0=INT(SYMTAB/65536)*2^4,Z$(5,2)=BIN(Z,2),Z$(3,1)=BIN(Z0,1)
2330 LET PGMLEN$=BIN(LENGTH,3),Z$(1,2)=PGMLEN$(2,2),Z$(3,1)=IOR(Z$(3,1),PGMLEN$(1,1))
2340 LET Z$(7,2)=BIN(COUNT,2)
2350 WRITE RECORD(1,IND=0)Z$
2360 CLOSE (1)
2370 GOTO 1000
3000 REM 3000 -- DATA FILES
3010 IF !(MULTI_TO_VKEYED) THEN OPEN (1)F$(9); LOCK (1)
3020 LET REDEFINED=0
3030 IF F$(2,1)=$00$ OR MULTI_TO_VKEYED THEN GOTO 3130
3040 REM - LOOP FOR KEYED FILE
3050 PRINT ".",
3060 GOSUB 7000; IF Z$=EOF$ THEN GOTO 3210
3070 GOSUB 25000
3080 LET K0$=Z$
3090 IF F$(7,2)=$0000$ THEN LET Z$="" ELSE GOSUB 7000; GOSUB 25000
3100 WRITE RECORD(1,KEY=K0$,ERR=3110)Z$; GOTO 3040
3110 PRINT "!ERR=",ERR; ESCAPE
3120 GOTO 3040
3130 REM - LOOP FOR NON-KEYED FILES
3140 PRINT ".",
3150 GOSUB 7000; IF Z$=EOF$ THEN GOTO 3210
3160 GOSUB 25000
3170 IF REDEFINED OR !(MULTI_TO_VKEYED) THEN GOTO 3180 ELSE GOSUB DEFINE_B4_VKEYED; GOTO 3150
3180 WRITE RECORD(1,ERR=3190)Z$; GOTO 3130
3190 PRINT "!ERR=",ERR; ESCAPE
3200 GOTO 3130
3210 REM - END OF DATA FILE
3220 CLOSE (1)
3230 GOTO 1000
5000 REM 5000 - Decipher FMTINFO() from B4 MULTI type.
5010 DEFINE_B4_VKEYED: 
5020 CALL "FMTINFO.pub",F$,Z$,1,BBX_MKEY$,FLAG$; IF FLAG$<>"OK" THEN ESCAPE
5030 CLOSE (1); ERASE F$(9),ERR=5040
5040 EXECUTE BBX_MKEY$
5050 LET REDEFINED=1
5060 OPEN (1)F$(9)
5070 RETURN
6500 REM 6500 -- ERROR MESSAGE IN E$
6510 LET ERRCOUNT=ERRCOUNT+1
6520 PRINT (100,END=6540)F$(9),": ",E$,$0D0A$,
6530 RETURN
6540 PRINT 'RB',"ERROR FILE (BXRCV.ERR) IS FULL"; GOTO 9000
7000 REM 7000 -- FETCH NEXT BUFFER INTO Z$
7010 IF LEN(B0$)>5 THEN GOTO 7070
7020 IF B9$="COMM" THEN GOSUB 8000; GOTO 7050
7030 READ RECORD(7,ERR=7040,SIZ=128)B$; GOTO 7050
7040 PRINT 'LF','RB',"UNABLE TO CONTINUE READING INPUT FILE!"; ESCAPE
7050 LET B0$=B0$+B$
7060 IF SENDER$="MSB" THEN LET CRLF=POS($0D0A$=B0$); IF CRLF THEN ESCAPE; LET B0$=BO$(1,CRLF-1)+B0$(CRLF+2); GOTO 7060; REM ' microshare
7070 LET RECLEN=NUM(TBL(B0$(1,5),$7F$)),B0$=B0$(6)
7080 IF RECLEN<=LEN(B0$) THEN GOTO 7110
7090 IF B9$="COMM" THEN GOSUB 8000 ELSE READ RECORD(7,ERR=7040,SIZ=128)B$
7100 LET B0$=B0$+B$; GOTO 7080
7110 LET Z$=B0$(1,RECLEN),B0$=B0$(RECLEN+1); RETURN
7500 REM 7500 -- INITIALIZE INPUT STREAM
7510 DIM BEG80$(LEN(BEG$),$80$); LET BEG80$=IOR(BEG$,BEG80$),B0$=""
7520 IF B9$="COMM" THEN GOSUB 8000 ELSE READ RECORD(7,SIZ=128,ERR=7570)B$
7530 LET B0$=B0$+B$,Z=POS(BEG$=B0$); IF Z=0 THEN LET Z=POS(BEG80$=B0$)
7540 IF Z=0 THEN LET B0$=B0$(100); GOTO 7520
7550 IF B0$(Z,1)>$80$ THEN DIM Z$(LEN(EOF$),$80$); LET EOF$=IOR(EOF$,Z$)
7560 LET B0$=B0$(Z+11); RETURN
7570 PRINT 'RB',"FILE NOT CREATED BY BXSND"
7580 LET B0$="NO"; RETURN
8000 REM 8000" RECEIVE A 128-BYTE DATA PACKET
8010 READ RECORD(7,SIZ=1,ERR=8580,TIM=60)Z1$
8020 PRINT (7)"Y",
8030 LET TOT=4+256+2
8040 DIM Z1$(TOT)
8050 REM " READ THE PACKET A CHUNK AT A TIME
8060 LET Z1=1
8070 LET Z=LEN(Z1$(Z1)); IF Z>B1 THEN LET Z=B1
8080 LET RTY=0
8090 READ RECORD(7,SIZ=Z,TIM=2,ERR=8100)Z1$(Z1,Z); GOTO 8170
8100 LET RTY=RTY+1; IF RTY=3 THEN GOTO 8130
8110 PRINT "x",
8120 PRINT (7)"N",; GOTO 8090
8130 IF B2>0 THEN LET B2=B2-1,B1=2^B2
8140 READ RECORD(7,SIZ=1000,TIM=1,ERR=8150)Z9$
8150 PRINT "(",STR(B1),")",
8160 PRINT (7)STR(B2),; GOTO 8060
8170 LET Z1=Z1+Z; IF Z1<=LEN(Z1$) THEN PRINT (7)"Y",; GOTO 8070
8180 REM " WE HAVE THE WHOLE THING - IS IT ANY GOOD
8190 LET Z1$=TBL(Z1$,$7F$)
8200 LET Z=NUM(Z1$(1,4),ERR=8230),B$=ATH(Z1$(5),ERR=8230),SUM$=B$(129,1),B$=B$(1,128)
8210 LET B2$=LRC(B$)
8220 IF Z=B0 AND SUM$=B2$ THEN GOTO 8240
8230 GOTO 8120
8240 PRINT (7)"Y",
8250 LET B0=B0+1; IF B0>9999 THEN LET B0=0
8260 RETURN
8500 REM 8500" INITIALIZE COMM IN
8510 PRINT "ATTEMPTING TO ESTABLISH COMMUNICATIONS WITH SENDING PROGRAM..."
8520 REM " CLEAR INPUT BUFFER
8530 READ RECORD(7,SIZ=1000,TIM=1,ERR=8540)Z9$
8540 REM " SAY WE'RE READY TO RECEIVE
8550 PRINT (7)"B",
8560 REM ' Might need to change this timeout for BOSS/VS
8570 READ RECORD(7,SIZ=1,TIM=10,ERR=8580)Z9$; GOTO 8590
8580 PRINT 'LF','RB',"TIMED OUT ON READ"; STOP
8590 IF AND(Z9$,$7F$)<>"Y" THEN GOTO 8570
8600 LET B0=0,B1=256,B2=8
8610 RETURN
9000 REM 9000 - DONE
9010 PRINT 'LF',ERRCOUNT," ERROR(S) LOGGED"
9020 STOP
10000 REM 10000 -- INITIALIZE FOR PARTICULAR SENDER
10010 REM -- CHECK FOR RECEIVING FROM UPPER ASCII BASIC
10020 LET HIBIT$=""
10030 IF EOF$>$80$ THEN INPUT (0,ERR=10030)"TOGGLE HIGH BITS ON ALL DATA AND KEYS? (Y/N): ",Z$:("Y"=10040,"y"=10040,"N"=10050,"n"=10050) ELSE GOTO 10050
10040 LET HIBIT$="ALL"; GOTO 10050
10050 IF SENDER$="BI" THEN GOTO 12000
10060 IF SENDER$="SMC" OR SENDER$="TBD" OR SENDER$="PVX" OR SENDER$="MSB" THEN GOTO 13000
10070 IF SENDER$="REXON" THEN GOTO 12500
10080 IF SENDER$="PRT" THEN GOTO 14000
10090 RETURN
12000 REM 12000 -- SETUP FOR BI
12010 PRINT 'LF',"BUILDING KEYWORD TABLE..."
12020 LET W$=""
12030 LET W$=W$+"/RUN/LOAD/ESCAPE/SETESC/EDIT/DELETE/LIST/MERGE/RENUMBER/SAVE"
12040 LET W$=W$+"/PROTECT/REM/RENAME/COPY/RESET/CLEAR/BEGIN/NEW/STOP/END/GOTO"
12050 LET W$=W$+"/ON/GOSUB/RETURN/FOR/NEXT/EXITTO/IF/SETERR/RETRY/LET/DIM/PRE"
12060 LET W$=W$+"CISION/DEF/FN/ASC/CHR/LST/STR/NUM/FPT/ABS/INT/SGN/LEN/POS/ER"
12070 LET W$=W$+"R/DSZ/PSZ/CTL/RND/SYS/TCB/OSV/PGN/INDEXED/DIRECT/SORT/PROGRA"
12080 LET W$=W$+"M/SERIAL/ERASE/DISABLE/ENABLE/OPEN/CLOSE/LOCK/FID/DIR/IOLIST"
12090 LET W$=W$+"/IOL/DOM/IND/KEY/INPUT/PRINT/UNLOCK/WRITE/READ/RECORD/FIND/E"
12100 LET W$=W$+"XTRACT/REMOVE/TIM/SETTIME/FLOATINGPOINT/EXPAND/TRACE/TRACEOF"
12110 LET W$=W$+"F/AND/OR/TO/STEP/TABLE/SETDAY/DAY/SIZ/"
12120 REM " BUILD STRING OF KEYWORDS ARRANGED BY LENGTH 
12130 LET W=2
12140 LET K$=$0102030405060708090A0B0C0D0E0F$
12150 LET Z=POS("/"=W$(W))-1
12160 LET Z1=POS(CHR(Z)=K$)
12170 LET K$=K$(1,Z1)+W$(W,Z)+K$(Z1+1)
12180 LET W=W+Z+1
12190 IF W<LEN(W$) THEN GOTO 12150
12200 REM " WE DON'T NEED W$ ANYMORE 
12210 LET W$=""
12220 REM " BUILD INDEX TABLE TO KEY WORD STRING 
12230 REM " O(X)=OFFSET OF KEYWORDS LENGTH X, L(X)=LENGTH OF ALL THOSE WORDS 
12240 DIM O[15],L[15]
12250 LET K=2,O=1
12260 LET O[O]=K
12270 LET Z=POS(" ">K$(K))
12280 LET L[O]=Z-1
12290 LET K=K+Z,O=O+1
12300 IF K<=LEN(K$) THEN GOTO 12260
12310 RETURN
12500 REM 12500 -- SETUP FOR REXON
12510 PRINT 'LF',"BUILDING KEYWORD TABLE..."
12520 LET W$=""
12530 LET W$=W$+"/RUN/LOAD/ESCAPE/SETESC/EDIT/DELETE/LIST/MERGE/RENUMBER/SAVE"
12540 LET W$=W$+"/PROTECT/REM/RENAME/COPY/RESET/CLEAR/BEGIN/NEW/STOP/END/GOTO"
12550 LET W$=W$+"/ON/GOSUB/RETURN/FOR/NEXT/EXITTO/IF/SETERR/RETRY/LET/DIM/PRE"
12560 LET W$=W$+"CISION/DEF/FN/ASC/CHR/LST/STR/NUM/FPT/ABS/INT/SGN/LEN/POS/ER"
12570 LET W$=W$+"R/DSZ/PSZ/CTL/RND/SYS/TCB/OSV/PGN/INDEXED/DIRECT/SORT/PROGRA"
12580 LET W$=W$+"M/SERIAL/ERASE/DISABLE/ENABLE/OPEN/CLOSE/LOCK/FID/DIR/IOLIST"
12590 LET W$=W$+"/IOL/DOM/IND/KEY/INPUT/PRINT/UNLOCK/WRITE/READ/RECORD/FIND/E"
12600 LET W$=W$+"XTRACT/REMOVE/TIM/SETTIME/FLOATINGPOINT/EXPAND/TRACE/TRACEOF"
12610 LET W$=W$+"F/AND/OR/TO/STEP/TABLE/SETDAY/DAY/SIZ/THEN/HTA/BIN/DEC/EXECU"
12620 LET W$=W$+"TE/ELSE/CALL/ENTER/EXIT/RELEASE/SYSTEM/STP/ERS/"
12630 REM " BUILD STRING OF KEYWORDS ARRANGED BY LENGTH 
12640 LET W=2
12650 LET K$=$0102030405060708090A0B0C0D0E0F$
12660 LET Z=POS("/"=W$(W))-1
12670 LET Z1=POS(CHR(Z)=K$)
12680 LET K$=K$(1,Z1)+W$(W,Z)+K$(Z1+1)
12690 LET W=W+Z+1
12700 IF W<LEN(W$) THEN GOTO 12660
12710 REM " WE DON'T NEED W$ ANYMORE 
12720 LET W$=""
12730 REM " BUILD INDEX TABLE TO KEY WORD STRING 
12740 REM " O(X)=OFFSET OF KEYWORDS LENGTH X, L(X)=LENGTH OF ALL THOSE WORDS 
12750 DIM O[15],L[15]
12760 LET K=2,O=1
12770 LET O[O]=K
12780 LET Z=POS(" ">K$(K))
12790 LET L[O]=Z-1
12800 LET K=K+Z,O=O+1
12810 IF K<=LEN(K$) THEN GOTO 12770
12820 RETURN
13000 REM 13000 -- SETUP FOR TBD/SMC/PVX/MSB
13010 IF HIBIT$<>"" THEN RETURN
13020 INPUT (0,ERR=13020)"CHANGE $8A$ TO $0A$ IN DATA RECORDS? (Y/N): ",Z$:("Y"=13030,"y"=13030,"N"=13040,"n"=13040)
13030 LET HIBIT$="LF"
13040 RETURN
14000 REM 14000 -- SETUP FOR PERTEC
14010 IF HIBIT$<>"" THEN RETURN
14020 INPUT (0,ERR=14020)"CHANGE $0D$ TO $0A$ IN DATA RECORDS? (Y/N): ",Z$:("Y"=14030,"y"=14030,"N"=14040,"n"=14040)
14030 LET HIBIT$="LF"
14040 RETURN
15000 REM 15000 -- CONVERT PGM LINES FOR PARTICULAR SENDER
15010 REM -- Z$ IN, Z0$ OUT
15020 REM -- STRIP HIGH BITS IF NECESSARY
15030 IF EOF$>$80$ THEN LET Z$=TBL(Z$,$7F$)
15040 IF SENDER$="BI" THEN GOTO 16000
15050 IF SENDER$="SMC" OR SENDER$="TBD" THEN GOTO 16500
15060 IF SENDER$="BB3" OR SENDER$="S10" THEN GOTO 17400
15070 IF SENDER$="VS" THEN GOTO 17500
15080 IF SENDER$="BB7" THEN GOTO 18000
15090 IF SENDER$="REXON" THEN GOTO 18500
15100 IF SENDER$="PRT" THEN GOTO 19000
15110 IF SENDER$="OB" THEN GOTO 19500
15120 IF SENDER$="PVX" THEN GOTO 15500
15130 IF SENDER$="MSB" THEN GOTO 15200
15140 LET Z0$=Z$; RETURN
15200 REM 15200,2 -- Convert for MicroShare
15202 LET Z0$=""
15204 GOSUB 20000
15206 LET V0$=" (",V1$="("; GOSUB 20200
15208 LET V0$="'B0'",V1$="'BACKGR','BLACK'"; GOSUB 20200
15210 LET V0$="'B1'",V1$="'BACKGR','BLUE'"; GOSUB 20200
15212 LET V0$="'B2'",V1$="'BACKGR','GREEN'"; GOSUB 20200
15214 LET V0$="'B3'",V1$="'BACKGR','CYAN'"; GOSUB 20200
15216 LET V0$="'B4'",V1$="'BACKGR','RED'"; GOSUB 20200
15218 LET V0$="'B5'",V1$="'BACKGR','MAGENTA'"; GOSUB 20200
15220 LET V0$="'B6'",V1$="'BACKGR','YELLOW'"; GOSUB 20200
15222 LET V0$="'B7'",V1$="'BACKGR','WHITE'"; GOSUB 20200
15224 LET V0$="'C0'",V1$="'BLACK'"; GOSUB 20200
15226 LET V0$="'C1'",V1$="'BLUE'"; GOSUB 20200
15228 LET V0$="'C2'",V1$="'GREEN'"; GOSUB 20200
15230 LET V0$="'C3'",V1$="'CYAN'"; GOSUB 20200
15232 LET V0$="'C4'",V1$="'RED'"; GOSUB 20200
15234 LET V0$="'C5'",V1$="'MAGENTA'"; GOSUB 20200
15236 LET V0$="'C6'",V1$="'YELLOW'"; GOSUB 20200
15238 LET V0$="'C7'",V1$="'WHITE'"; GOSUB 20200
15240 LET V0$="'CB'",V1$="'CB?'"; GOSUB 20200
15242 LET V0$="'CC'",V1$="'CC?'"; GOSUB 20200
15244 LET V0$="'CD'",V1$="'DC'"; GOSUB 20200
15246 LET V0$="'D0'",V1$="'BACKGR','BLACK','DEFAULT'"; GOSUB 20200
15248 LET V0$="'D1'",V1$="'BACKGR','BLUE','DEFAULT'"; GOSUB 20200
15250 LET V0$="'D2'",V1$="'BACKGR','GREEN','DEFAULT'"; GOSUB 20200
15252 LET V0$="'D3'",V1$="'BACKGR','CYAN','DEFAULT'"; GOSUB 20200
15254 LET V0$="'D4'",V1$="'BACKGR','RED','DEFAULT'"; GOSUB 20200
15256 LET V0$="'D5'",V1$="'BACKGR','MAGENTA','DEFAULT'"; GOSUB 20200
15258 LET V0$="'D6'",V1$="'BACKGR','YELLOW','DEFAULT'"; GOSUB 20200
15260 LET V0$="'D7'",V1$="'BACKGR','WHITE','DEFAULT'"; GOSUB 20200
15262 LET V0$="'DF'",V1$="'DEFAULT'"; GOSUB 20200
15264 LET V0$="'G0'",V1$="'GS',""0"",'GE'"; GOSUB 20200
15266 LET V0$="'G1'",V1$="'GS',""1"",'GE'"; GOSUB 20200
15268 LET V0$="'G2'",V1$="'GS',""2"",'GE'"; GOSUB 20200
15270 LET V0$="'G3'",V1$="'GS',""3"",'GE'"; GOSUB 20200
15272 LET V0$="'G4'",V1$="'GS',""4"",'GE'"; GOSUB 20200
15274 LET V0$="'G5'",V1$="'GS',""5"",'GE'"; GOSUB 20200
15276 LET V0$="'G6'",V1$="'GS',"":"",'GE'"; GOSUB 20200
15278 LET V0$="'G7'",V1$="'GS',""7"",'GE'"; GOSUB 20200
15280 LET V0$="'G8'",V1$="'GS',""6"",'GE'"; GOSUB 20200
15282 LET V0$="'G9'",V1$="'GS',""9"",'GE'"; GOSUB 20200
15284 LET V0$="'GA'",V1$="'GS',""8"",'GE'"; GOSUB 20200
15286 LET V0$="'GB'",V1$="'GB?'"; GOSUB 20200
15288 LET V0$="'QR'",V1$="'EO'"; GOSUB 20200
15290 LET V0$="'SR'",V1$="'BO'"; GOSUB 20200
15292 LET V0$="'UR'",V1$="'LC'"; GOSUB 20200
15294 LET V0$="'US'",V1$="'UC'"; GOSUB 20200
15296 LET V0$="'WC'",V1$="'PUSH'"; GOSUB 20200
15298 LET V0$="'WD'",V1$="'DROP'"; GOSUB 20200
15300 LET V0$="'WF'",V1$="'SCROLL'(""OFF"")"; GOSUB 20200
15302 LET V0$="'WG'",V1$="'GOTO'"; GOSUB 20200
15304 LET V0$="'WL'",V1$="'WINDOW'(""LIST"")"; GOSUB 20200
15306 LET V0$="'WM'",V1$="'MOVE'"; GOSUB 20200
15308 LET V0$="'WN'",V1$="'WINDOW'"; GOSUB 20200
15310 LET V0$="'WO'",V1$="'SCROLL'(""ON""),'WRAP'(""ON"")"; GOSUB 20200
15312 LET V0$="'WQ'",V1$="'POP'"; GOSUB 20200
15314 LET V0$="'WR'",V1$="'SCROLL'"; GOSUB 20200
15316 LET V0$="'WS'",V1$="'SWAP'"; GOSUB 20200
15318 LET V0$="'WW'",V1$="'WRAP'(""OFF"")"; GOSUB 20200
15320 LET V0$="'WX'",V1$="'BOX'"; GOSUB 20200
15322 LET V0$="'XB'",V1$="'CURSOR'(""INS""),'CURSOR'(""ON"")"; GOSUB 20200
15324 LET V0$="'XO'",V1$="'CURSOR'(""OFF"")"; GOSUB 20200
15326 LET V0$="'XU'",V1$="'CURSOR'(""REP""),'CURSOR'(""ON"")"; GOSUB 20200
15328 LET V0$="(ALL)",V1$="[ALL]"; GOSUB 20200
15330 LET V0$=",BNK=0",V1$=""; GOSUB 20200
15332 LET V0$=",BNK=1",V1$=""; GOSUB 20200
15334 LET V0$=",BNK=2",V1$=""; GOSUB 20200
15336 LET V0$=",ISZ=1",V1$=",ISZ=-1"; GOSUB 20200
15338 LET V0$="BSZ(0)",V1$="DSZ"; GOSUB 20200
15340 LET V0$="BSZ(1)",V1$="DSZ"; GOSUB 20200
15342 LET V0$="BSZ(2)",V1$="DSZ"; GOSUB 20200
15344 LET V0$="BSZ(",V1$="BSZ?("; GOSUB 20200
15346 LET V0$="ESC",V1$="$1B$"; GOSUB 20200
15348 LET V0$="FALSE(",V1$="!("; GOSUB 20200
15350 LET V0$="FIB(",V1$="FID("; GOSUB 20200
15352 LET V0$="FID(",V1$="FID?("; GOSUB 20200
15354 LET V0$="FID?(0)",V1$="FID(0)"; GOSUB 20200
15356 LET V0$="OPTS",V1$="OPTS?"; GOSUB 20200
15358 LET V0$="PGN",V1$="PGM(-2)"; GOSUB 20200
15360 LET V0$="PUB(",V1$="PUB?("; GOSUB 20200
15362 LET V0$="PUBV(0)",V1$="PGM(-1)"; GOSUB 20200
15364 LET V0$="PUBV(PUBC)",V1$="PGM(-2)"; GOSUB 20200
15366 LET V0$="PUBV(",V1$="PUBV?("; GOSUB 20200
15368 LET V0$="QUO",V1$="$22$"; GOSUB 20200
15370 LET V0$="SDAY",V1$="DATE(0)"; GOSUB 20200
15372 LET V0$="SEP",V1$="$0A$"; GOSUB 20200
15374 LET V0$="SERIAL",V1$="STRING"; GOSUB 20200
15376 LET V0$="SETOPTS",V1$="SETOPTS?"; GOSUB 20200
15378 LET V0$="SET PATH=",V1$="PREFIX"; GOSUB 20200
15380 LET V0$="SET DPATH=",V1$="PREFIX?"; GOSUB 20200
15382 LET V0$="SET PPATH=",V1$="PREFIX?"; GOSUB 20200
15384 LET V0$="DPATH",V1$="PFX?"; GOSUB 20200
15386 LET V0$="PPATH",V1$="PFX?"; GOSUB 20200
15388 LET V0$="PATH",V1$="PFX"; GOSUB 20200
15390 LET V0$="TCB(",V1$="TCB?("; GOSUB 20200
15392 LET V0$="TCB?(2)",V1$="UNT"; GOSUB 20200
15394 LET V0$="TCB?(5)",V1$="TCB(5)"; GOSUB 20200
15396 LET V0$="TCB?(22)",V1$="DEC(INFO(2,0))"; GOSUB 20200
15398 LET V0$="TCB?(3)",V1$="ERR"; GOSUB 20200
15400 LET V0$="TCB?(31)",V1$="TCB(14)"; GOSUB 20200
15402 LET V0$="TCB?(8)",V1$="DSZ"; GOSUB 20200
15404 LET V0$="TCB?(9)",V1$="DSZ"; GOSUB 20200
15406 LET V0$="TSK(",V1$="TSK?("; GOSUB 20200
15408 LET V0$="TSKB(",V1$="TSK("; GOSUB 20200
15410 LET V0$="ERL",V1$="TCB(5)"; GOSUB 20200
15412 LET V0$="PUBC",V1$="TCB(13)"; GOSUB 20200
15414 LET Z0$=Z0$+Z1$
15416 GOSUB 20100; LET Z0$=Z0$+Z1$; IF Z$>"" THEN GOTO 15204
15418 RETURN
15500 REM 15500,2 -- convert for ProvideX
15502 LET Z0$=""
15504 GOSUB 20000
15506 REM "In each chunk Z1$, convert V0$ to V1$
15508 LET V0$=" ! ",V1$=" ; REM "; GOSUB 20200
15510 LET V0$=": ; REM ",V1$=": REM "; GOSUB 20200
15512 LET V0$="'B0'",V1$="'BACKGR','BLACK'"; GOSUB 20200
15514 LET V0$="'B1'",V1$="'BACKGR','RED'"; GOSUB 20200
15516 LET V0$="'B2'",V1$="'BACKGR','GREEN'"; GOSUB 20200
15518 LET V0$="'B3'",V1$="'BACKGR','YELLOW'"; GOSUB 20200
15520 LET V0$="'B4'",V1$="'BACKGR','BLUE'"; GOSUB 20200
15522 LET V0$="'B5'",V1$="'BACKGR','MAGENTA'"; GOSUB 20200
15524 LET V0$="'B6'",V1$="'BACKGR','CYAN'"; GOSUB 20200
15526 LET V0$="'B7'",V1$="'BACKGR','WHITE'"; GOSUB 20200
15528 LET V0$="'BK'",V1$="'BACKGR'"; GOSUB 20200
15530 LET V0$="'BW'",V1$="'WRAP'(""ON"")"; GOSUB 20200
15532 LET V0$="'BX'",V1$="'BOX'"; GOSUB 20200
15534 LET V0$="'C0'",V1$="'CURSOR'(""OFF"")"; GOSUB 20200
15536 LET V0$="'C1'",V1$="'CURSOR'(""REP""),'CURSOR'(""ON"")"; GOSUB 20200
15538 LET V0$="'C2'",V1$="'CURSOR'(""INS""),'CURSOR'(""ON"")"; GOSUB 20200
15540 LET V0$="'CAPTION'",V1$="'TITLE'"; GOSUB 20200
15542 LET V0$="'CIRCLE'",V1$="'ARC'"; GOSUB 20200
15544 LET V0$="'CURSOR'(0)",V1$="'SETCURSOR'(0?)"; GOSUB 20200
15546 LET V0$="'CURSOR'(1)",V1$="'SETCURSOR'(3)"; GOSUB 20200
15548 LET V0$="'CURSOR'(2)",V1$="'SETCURSOR'(2)"; GOSUB 20200
15550 LET V0$="'CURSOR'(3)",V1$="'SETCURSOR'(1)"; GOSUB 20200
15552 LET V0$="'CURSOR'(4)",V1$="'SETCURSOR'(4?)"; GOSUB 20200
15554 LET V0$="'CURSOR'(5)",V1$="'SETCURSOR'(5?)"; GOSUB 20200
15556 LET V0$="'CURSOR'(6)",V1$="'SETCURSOR'(6?)"; GOSUB 20200
15558 LET V0$="'CURSOR'(7)",V1$="'SETCURSOR'(7?)"; GOSUB 20200
15560 LET V0$="'CURSOR'(8)",V1$="'SETCURSOR'(8?)"; GOSUB 20200
15562 LET V0$="'CURSOR'(9)",V1$="'SETCURSOR'(9?)"; GOSUB 20200
15564 LET V0$="'CURSOR'(10)",V1$="'SETCURSOR'(10?)"; GOSUB 20200
15566 LET V0$="'CURSOR'(11)",V1$="'SETCURSOR'(11?)"; GOSUB 20200
15568 LET V0$="'DF'",V1$="'DEFAULT'"; GOSUB 20200
15570 LET V0$="'DIALOGUE'",V1$="'WINDOW'"; GOSUB 20200
15572 LET V0$="'DO'",V1$="'DESTROY'(0)"; GOSUB 20200
15574 LET V0$="'EW'",V1$="'WRAP'(""OFF"")"; GOSUB 20200
15576 LET V0$="'F0'",V1$="'BLACK'"; GOSUB 20200
15578 LET V0$="'F1'",V1$="'RED'"; GOSUB 20200
15580 LET V0$="'F2'",V1$="'GREEN'"; GOSUB 20200
15582 LET V0$="'F3'",V1$="'YELLOW'"; GOSUB 20200
15584 LET V0$="'F4'",V1$="'BLUE'"; GOSUB 20200
15586 LET V0$="'F5'",V1$="'MAGENTA'"; GOSUB 20200
15588 LET V0$="'F6'",V1$="'CYAN'"; GOSUB 20200
15590 LET V0$="'F7'",V1$="'WHITE'"; GOSUB 20200
15592 LET V0$="'LINE'",V1$="'POLYLINE'"; GOSUB 20200
15594 LET V0$="'PICTURE'",V1$="'IMAGE'"; GOSUB 20200
15596 LET V0$="'PIE'",V1$="'ARC'"; GOSUB 20200
15598 LET V0$="'RECTANGLE'",V1$="'RECT'"; GOSUB 20200
15600 LET V0$="'SD'",V1$="'SCROLL'(""OFF"")"; GOSUB 20200
15602 LET V0$="'SE'",V1$="'SCROLL'(""ON"")"; GOSUB 20200
15604 LET V0$="'SHOW'(-1)",V1$="'HIDE'"; GOSUB 20200
15606 LET V0$="'SHOW'(0)",V1$="'MINIMIZE'"; GOSUB 20200
15608 LET V0$="'SHOW'(1)",V1$="'SHOW'"; GOSUB 20200
15610 LET V0$="'SHOW'(2)",V1$="'MAXIMIZE'"; GOSUB 20200
15612 LET V0$="'SR'",V1$="'SCROLL'(""RESET"")"; GOSUB 20200
15614 LET V0$="'TEXTWDW'",V1$="'WINDOW'"; GOSUB 20200
15616 LET V0$="'TW'",V1$="'WINDOW'(""LIST"")"; GOSUB 20200
15618 LET V0$="'WA'",V1$="'WINDOW'"; GOSUB 20200
15620 LET V0$="'WC'",V1$="'PUSH'"; GOSUB 20200
15622 LET V0$="'WD'",V1$="'DROP'"; GOSUB 20200
15624 LET V0$="'WG'",V1$="'GOTO'"; GOSUB 20200
15626 LET V0$="'WR'",V1$="'POP'"; GOSUB 20200
15628 LET V0$="'WS'",V1$="'SWAP'"; GOSUB 20200
15630 LET V0$="'_BLACK'",V1$="'BACKGR','BLACK'"; GOSUB 20200
15632 LET V0$="'_BLUE'",V1$="'BACKGR','BLUE'"; GOSUB 20200
15634 LET V0$="'_CYAN'",V1$="'BACKGR','CYAN'"; GOSUB 20200
15636 LET V0$="'_GREEN'",V1$="'BACKGR','GREEN'"; GOSUB 20200
15638 LET V0$="'_MAGENTA'",V1$="'BACKGR','MAGENTA'"; GOSUB 20200
15640 LET V0$="'_RED'",V1$="'BACKGR','RED'"; GOSUB 20200
15642 LET V0$="'_WHITE'",V1$="'BACKGR','WHITE'"; GOSUB 20200
15644 LET V0$="'_YELLOW'",V1$="'BACKGR','YELLOW'"; GOSUB 20200
15646 LET V0$="ARG(",V1$="ARGV("; GOSUB 20200
15648 LET V0$="BKG",V1$="(FID(0)=""IO"")"; GOSUB 20200
15650 LET V0$="CWDIR",V1$="CHDIR"; GOSUB 20200
15652 LET V0$="DEFAULT",V1$="CASE DEFAULT"; GOSUB 20200
15654 LET V0$="'CASE DEFAULT'",V1$="'DEFAULT'"; GOSUB 20200
15656 LET V0$="DIM(",V1$="FILL("; GOSUB 20200
15658 LET V0$="DIRECTORY",V1$="MKDIR"; GOSUB 20200
15660 LET V0$="DLM",V1$="""/"""; GOSUB 20200
15662 LET V0$="DTE(",V1$="DATE("; GOSUB 20200
15664 LET V0$="END DEF",V1$="FNEND"; GOSUB 20200
15666 LET V0$="END SWITCH",V1$="SWEND"; GOSUB 20200
15668 LET V0$="END_IF",V1$="FI"; GOSUB 20200
15670 LET V0$="ENV(",V1$="INFO(4,"; GOSUB 20200
15672 LET V0$="ESC",V1$="$1B$"; GOSUB 20200
15674 LET V0$="EVN(",V1$="NEVAL("; GOSUB 20200
15676 LET V0$="EVS(",V1$="SEVAL("; GOSUB 20200
15678 LET V0$="FIB(",V1$="FID?("; GOSUB 20200
15680 LET V0$="FID(",V1$="FID?("; GOSUB 20200
15682 LET V0$="FID?(0)",V1$="FID(0)"; GOSUB 20200
15684 LET V0$="FIN(",V1$="FIN?("; GOSUB 20200
15686 LET V0$="FLOATING POINT",V1$="FLOATINGPOINT"; GOSUB 20200
15688 LET V0$="GBL(DELETE",V1$="STBL(""!CLEAR"","; GOSUB 20200
15690 LET V0$="GBL(DELETE *)",V1$="STBL(""!CLEARALL"")"; GOSUB 20200
15692 LET V0$="GBL(DELETE TO",V1$="STBL(""!CLEARTO"","; GOSUB 20200
15694 LET V0$="GBL(LIST *)",V1$="STBL(""!LIST"")"; GOSUB 20200
15696 LET V0$="GBL(",V1$="STBL("; GOSUB 20200
15698 LET V0$="GFN",V1$="UNT"; GOSUB 20200
15700 LET V0$="GID",V1$="INFO(3,0)"; GOSUB 20200
15702 LET V0$="HFN",V1$="UNT"; GOSUB 20200
15704 LET V0$="KEF(",V1$="KEYF("; GOSUB 20200
15706 LET V0$="KEL(",V1$="KEYL("; GOSUB 20200
15708 LET V0$="KEN(",V1$="KEYN("; GOSUB 20200
15710 LET V0$="KEP(",V1$="KEYP("; GOSUB 20200
15712 LET V0$="KEYED",V1$="VKEYED"; GOSUB 20200
15714 LET V0$="KGN(",V1$="KGEN("; GOSUB 20200
15716 LET V0$="KNO=",V1$="KNUM="; GOSUB 20200
15718 LET V0$="LWD",V1$="DSK("""")+DIR("""")"; GOSUB 20200
15720 LET V0$="MSG(",V1$="ERRMES("; GOSUB 20200
15722 LET V0$="MSK(",V1$="MASK("; GOSUB 20200
15724 LET V0$="NAR",V1$="(ARGC-1)"; GOSUB 20200
15726 LET V0$="NID",V1$="INFO(3,4)"; GOSUB 20200
15728 LET V0$="OBTAIN",V1$="INPUT"; GOSUB 20200
15730 LET V0$="OPEN INPUT",V1$="OPEN"; GOSUB 20200
15732 LET V0$="OPEN LOAD",V1$="OPEN"; GOSUB 20200
15734 LET V0$="OPT=",V1$="MODE?="; GOSUB 20200
15736 LET V0$="PERFORM",V1$="CALL"; GOSUB 20200
15738 LET V0$="PFX(",V1$="DIR("; GOSUB 20200
15740 LET V0$="PGM(-1)",V1$="PGM(-1)"; GOSUB 20200
15742 LET V0$="PGM(-2)",V1$="PGM(-2)"; GOSUB 20200
15744 LET V0$="PGN",V1$="PGM(-2)"; GOSUB 20200
15746 LET V0$="PRC(",V1$="ROUND("; GOSUB 20200
15748 LET V0$="PUB(",V1$="PUB?("; GOSUB 20200
15750 LET V0$="QUIT",V1$="RELEASE"; GOSUB 20200
15752 LET V0$="QUO",V1$="$22$"; GOSUB 20200
15754 LET V0$="READ DATA",V1$="DREAD"; GOSUB 20200
15756 LET V0$="REFILE",V1$="INITFILE"; GOSUB 20200
15758 LET V0$="RENUMBER",V1$="RENUM"; GOSUB 20200
15760 LET V0$="RND",V1$="RND(0)"; GOSUB 20200
15762 LET V0$="RND(0)(",V1$="RND("; GOSUB 20200
15764 LET V0$="SEP",V1$="$0A$"; GOSUB 20200
15766 LET V0$="SERIAL",V1$="STRING"; GOSUB 20200
15768 LET V0$="SETESC DISABLE",V1$="ESCOFF"; GOSUB 20200
15770 LET V0$="SETESC ENABLE",V1$="ESCON"; GOSUB 20200
15772 LET V0$="SETESC OFF",V1$="ESCOFF"; GOSUB 20200
15774 LET V0$="SETESC ON",V1$="ESCON"; GOSUB 20200
15776 LET V0$="SID",V1$="INFO(0,0)"; GOSUB 20200
15778 LET V0$="SRT(",V1$="SSORT("; GOSUB 20200
15780 LET V0$="SWP(",V1$="SWAP("; GOSUB 20200
15782 LET V0$="SYS(",V1$="SCALL("; GOSUB 20200
15784 LET V0$="TCB(",V1$="TCB?("; GOSUB 20200
15786 LET V0$="TCB?(0)",V1$="TCB(0)"; GOSUB 20200
15788 LET V0$="TCB?(1)",V1$="TCB(1)"; GOSUB 20200
15790 LET V0$="TCB?(2)",V1$="TCB(2)"; GOSUB 20200
15792 LET V0$="TCB?(3)",V1$="TCB(3)"; GOSUB 20200
15794 LET V0$="TCB?(4)",V1$="TCB(4)"; GOSUB 20200
15796 LET V0$="TCB?(5)",V1$="TCB(5)"; GOSUB 20200
15798 LET V0$="TCB?(6)",V1$="TCB(6)"; GOSUB 20200
15800 LET V0$="TCB?(7)",V1$="TCB(7)"; GOSUB 20200
15802 LET V0$="TCB?(8)",V1$="TCB(8)"; GOSUB 20200
15804 LET V0$="TCB?(9)",V1$="TCB(9)"; GOSUB 20200
15806 LET V0$="TCB?(10)",V1$="TCB(10)"; GOSUB 20200
15808 LET V0$="TCB?(14)",V1$="TCB(14)"; GOSUB 20200
15810 LET V0$="TCB?(15)",V1$="TCB(15)"; GOSUB 20200
15812 LET V0$="TCB?(16)",V1$="TCB(16)"; GOSUB 20200
15814 LET V0$="TCB?(17)",V1$="TCB(17)"; GOSUB 20200
15816 LET V0$="TCB?(23)",V1$="DEC(INFO(2,0))"; GOSUB 20200
15818 LET V0$="TCB?(24)",V1$="DEC(INFO(2,1))"; GOSUB 20200
15820 LET V0$="ERS",V1$="TCB(5)"; GOSUB 20200
15822 LET V0$="LFA",V1$="TCB(12)"; GOSUB 20200
15824 LET V0$="MSL",V1$="TCB(16)"; GOSUB 20200
15826 LET V0$="PRC",V1$="TCB(14)"; GOSUB 20200
15828 LET V0$="RET",V1$="TCB(10)"; GOSUB 20200
15830 LET V0$="TME",V1$="TIM"; GOSUB 20200
15832 LET V0$="TMS",V1$="NUM(DATE(0:""%s""))"; GOSUB 20200
15834 LET V0$="TSK(",V1$="TSK?("; GOSUB 20200
15836 LET V0$="UID",V1$="INFO(3,2)"; GOSUB 20200
15838 LET V0$="VIA",V1$="FIELD"; GOSUB 20200
15840 LET V0$="VIN(",V1$="NFIELD("; GOSUB 20200
15842 LET V0$="VIS(",V1$="FIELD("; GOSUB 20200
15844 LET V0$="WHO",V1$="INFO(3,2)"; GOSUB 20200
15846 LET V0$="WRITE LOCK",V1$="WRITE?"; GOSUB 20200
15848 LET V0$="XFA(",V1$="FATTR("; GOSUB 20200
15850 LET V0$="{ALL}",V1$="[ALL]"; GOSUB 20200
15852 LET V0$="=*END",V1$="=65534"; GOSUB 20200
15854 LET Z0$=Z0$+Z1$
15856 GOSUB 20100; LET Z0$=Z0$+Z1$; IF Z$>"" THEN GOTO 15504
15858 IF MASK(Z0$) THEN LET Z0$=Z0$(1,TCB(16)-3)+Z0$(TCB(16)); REM ' fixup from ! conversions: change "0000 ; REM " to "0000 REM "
15860 LET Z1$=Z0$
15862 LET V0$="=*SAME",V1$="="+STR(NUM(Z0$(1,5))); GOSUB 20200
15864 LET V0$="=*NEXT",V1$="="+STR(NUM(Z0$(1,5))+1); GOSUB 20200
15866 LET Z0$=Z1$
15868 RETURN
16000 REM 16000,5 -- BI CONVERT.  PARSE KEYWORDS AND INSERT SPACES
16005 REM -- REMOVE SPACE AFTER VERB
16010 LET Z=POS(" "=Z$,1,2); IF Z THEN LET Z$=Z$(1,Z-1)+Z$(Z+1)
16015 LET Z0$=Z$(1,4),Z$=Z$+" ",Z=5; REM " ADD SPACE TO Z$ FOR CONVENIENCE 
16020 REM " SCAN LOOP 
16025 IF Z>=LEN(Z$) THEN RETURN
16030 LET Z9$=Z$(Z,1)
16035 IF Z9$>="A" AND Z9$<="Z" THEN GOTO 16115
16040 IF Z9$=$22$ OR Z9$="$" OR Z9$="'" THEN GOTO 16060
16045 IF Z9$="!" THEN GOTO 16095
16050 LET Z0$=Z0$+Z9$,Z=Z+1
16055 GOTO 16020
16060 REM " QUOTES, HEX CONSTANT, OR MNEMONIC 
16065 LET Z9=POS(Z9$=Z$(Z),1,2)
16070 IF Z9=0 THEN GOTO 16085
16075 LET Z0$=Z0$+Z$(Z,Z9),Z=Z+Z9
16080 GOTO 16020
16085 LET Z0$=Z0$+Z$(Z),Z=Z+10000
16090 GOTO 16020
16095 REM " BANG ENCOUNTERED 
16100 IF Z>6 THEN LET Z0$=Z0$+"; "
16105 LET Z0$=Z0$+"REM "+Z$(Z+1),Z=Z+10000
16110 GOTO 16020
16115 REM " ALPHA ENCOUNTERED 
16120 REM " TRY FOR KEYWORD 
16125 LET Z1=POS("A">Z$(Z)),Z2=POS("Z"<Z$(Z))
16130 IF Z2 AND Z2<Z1 THEN LET Z1=Z2
16135 LET Z1=Z1-1
16140 IF Z1>14 THEN LET Z1=14
16145 IF Z1<2 THEN GOTO 16255
16150 IF POS(Z$(Z,Z1)=K$(O[Z1],L[Z1]),Z1) THEN GOTO 16165
16155 LET Z1=Z1-1
16160 GOTO 16145
16165 LET Z9$=Z$(Z,Z1),Z=Z+Z1
16170 REM " WE HAVE KEYWORD - CHECK FOR SPECIAL CASES 
16175 IF Z9$<>"FOR" OR LEN(Z0$)<6 THEN GOTO 16195
16180 REM " DON'T ALLOW FOR EXCEPT AS FIRST WORD (I.E. IF I=F OR J=K...) 
16185 LET Z=Z-3
16190 GOTO 16255
16195 IF Z9$="TRACE" THEN LET Z9$="SETTRACE"
16200 IF Z9$="TRACEOFF" THEN LET Z9$="ENDTRACE"
16205 IF Z9$="FID" AND Z$(Z,3)<>"(0)" THEN LET Z9$="FID?"
16210 IF Z9$="PGN" THEN LET Z9$="PGM(-1)"
16215 IF Z9$="REM" OR Z9$="TABLE" THEN GOTO 16245
16220 IF Z9$<>"FN" THEN GOTO 16275
16225 IF Z$(Z,1)>="A" AND Z$(Z,1)<="Z" THEN LET Z9$=Z9$+Z$(Z,1),Z=Z+1
16230 IF Z$(Z,1)="$" THEN LET Z9$=Z9$+"$",Z=Z+1
16235 LET Z9$=Z9$+"?"
16240 GOTO 16275
16245 LET Z0$=Z0$+Z9$+" "+Z$(Z)
16250 RETURN
16255 REM " TRY FOR VARIABLE 
16260 LET Z9$=Z$(Z,1),Z=Z+1
16265 IF Z$(Z,1)>="0" AND Z$(Z,1)<="9" THEN LET Z9$=Z9$+Z$(Z,1),Z=Z+1
16270 IF Z$(Z,1)="$" THEN LET Z9$=Z9$+"$",Z=Z+1
16275 REM " SEE IF FOLLOWED BY ALPHA OR NUMERIC 
16280 IF (Z$(Z,1)>="0" AND Z$(Z,1)<="9") OR (Z$(Z,1)>="A" AND Z$(Z,1)<="Z") THEN LET Z9$=Z9$+" "
16285 LET Z0$=Z0$+Z9$
16290 GOTO 16020
16500 REM 16500,5 -- CONVERT FOR TBD/SMC
16505 LET Z0$=""
16510 GOSUB 20000; REM ' Z1$ is chunk of line to examine
16515 LET V0$="**",V1$="^"; GOSUB 20200
16520 LET V0$="'BG'",V1$="'GS'"; GOSUB 20200
16525 LET V0$="'EG'",V1$="'GE'"; GOSUB 20200
16530 LET V0$="'BM'",V1$="'BG'"; GOSUB 20200
16535 LET V0$="'EM'",V1$="'EG'"; GOSUB 20200
16540 LET V0$="'CU'",V1$="'RC'"; GOSUB 20200
16545 LET V0$="'DM'",V1$="'RM'"; GOSUB 20200
16550 LET V0$="'CN'",V1$="'CURSOR'(""ON"")"; GOSUB 20200
16555 LET V0$="'CO'",V1$="'CURSOR'(""OFF"")"; GOSUB 20200
16560 LET V0$="'BROWN'",V1$="'RGB'(2,2,2)"; GOSUB 20200
16565 LET V0$="'GRAY'",V1$="'RGB'(1,1,1)"; GOSUB 20200
16570 LET V0$="'LBLUE'",V1$="'RGB'(0,0,1)"; GOSUB 20200
16575 LET V0$="'LCYAN'",V1$="'RGB'(0,1,1)"; GOSUB 20200
16580 LET V0$="'LGREEN'",V1$="'RGB'(0,1,0)"; GOSUB 20200
16585 LET V0$="'LMAGENTA'",V1$="'RGB'(1,0,1)"; GOSUB 20200
16590 LET V0$="'LRED'",V1$="'RGB'(1,0,0)"; GOSUB 20200
16595 LET V0$="'LGRAY'",V1$="'RGB'(2,2,2)"; GOSUB 20200
16600 LET V0$="ARG(",V1$="ARGV("; GOSUB 20200
16605 LET V0$="ATR(",V1$="FATTR?("; GOSUB 20200
16610 LET V0$="BSZ(1)",V1$="DSZ"; GOSUB 20200
16615 LET V0$="CDN",V1$="JUL(0,0,0)"; GOSUB 20200
16620 LET V0$="CDS",V1$="DATE(0)"; GOSUB 20200
16625 LET V0$="CGV(",V1$="STBL("; GOSUB 20200
16630 LET V0$="CPP(",V1$="CPL("; GOSUB 20200
16635 LET V0$="CVT(",V1$="CVT?("; GOSUB 20200
16640 LET V0$="DIM(",V1$="FILL("; GOSUB 20200
16645 LET V0$="ERM(",V1$="ERRMES("; GOSUB 20200
16650 LET V0$="ESC",V1$="$1B$"; GOSUB 20200
16655 LET V0$="FID(",V1$="FID?("; GOSUB 20200
16660 LET V0$="FID?(0)",V1$="FID(0)"; GOSUB 20200
16665 LET V0$="FIX(",V1$="INT?("; GOSUB 20200
16670 LET V0$="FKY(",V1$="KEYF("; GOSUB 20200
16675 LET V0$="FMD(",V1$="FIELD?("; GOSUB 20200
16680 LET V0$="FLOATING POINT",V1$="FLOATINGPOINT"; GOSUB 20200
16685 LET V0$="INF(",V1$="INFO("; GOSUB 20200
16690 LET V0$="LKY(",V1$="KEYL("; GOSUB 20200
16695 LET V0$="MSORT",V1$="VKEYED"; GOSUB 20200
16700 LET V0$="NTD(",V1$="DATE?("; GOSUB 20200
16705 LET V0$="OCH",V1$="CHN"; GOSUB 20200
16710 LET V0$="OPT=",V1$="MODE?="; GOSUB 20200
16715 LET V0$="PGN",V1$="PGM(-1)"; GOSUB 20200
16720 LET V0$="PKY(",V1$="KEYP("; GOSUB 20200
16725 LET V0$="PRC",V1$="TCB(14)"; GOSUB 20200
16730 LET V0$="PRM",V1$="OPTS?"; GOSUB 20200
16735 LET V0$="PRECISION 127",V1$="PRECISION -1"; GOSUB 20200
16740 LET V0$="PREFIX",V1$="PFX"; GOSUB 20200
16745 LET V0$="PSAVE",V1$="SAVEP"; GOSUB 20200
16750 LET V0$="PTN",V1$="DSZ"; GOSUB 20200
16755 LET V0$="PUB(",V1$="PUB?("; GOSUB 20200
16760 LET V0$="QUO",V1$="$22$"; GOSUB 20200
16765 LET V0$="REBOOT",V1$="RELEASE"; GOSUB 20200
16770 LET V0$="RND(0)",V1$="RND?(0)"; GOSUB 20200
16775 LET V0$="SEP",V1$="$0A$"; GOSUB 20200
16780 LET V0$="SET DIR",V1$="CHDIR"; GOSUB 20200
16785 LET V0$="DIR",V1$="DIR("""")"; GOSUB 20200
16790 LET V0$="SET OPTS",V1$="SETOPTS"; GOSUB 20200
16795 LET V0$="SET PFX",V1$="PREFIX"; GOSUB 20200
16800 LET V0$="SRT=",V1$="KNUM="; GOSUB 20200
16805 LET V0$="SSN",V1$="SSN?"; GOSUB 20200
16810 LET V0$="STL(",V1$="LEN("; GOSUB 20200
16815 LET V0$="SWP(",V1$="SWAP("; GOSUB 20200
16820 LET V0$="TCB(3)",V1$="TCB(10)"; GOSUB 20200
16825 LET V0$="TCB(8)",V1$="TCB?(8)"; GOSUB 20200
16830 LET V0$="TCB(9)",V1$="TCB?(9)"; GOSUB 20200
16835 LET V0$="TEXT",V1$="STRING"; GOSUB 20200
16840 LET V0$="TISAM",V1$="CISAM"; GOSUB 20200
16845 LET V0$="TSK(",V1$="TSK?("; GOSUB 20200
16850 LET V0$="WIN(",V1$="WIN?("; GOSUB 20200
16855 LET V0$="WINDOW ATTR",V1$="PRINT 'ATTR'"; GOSUB 20200
16860 LET V0$="WINDOW COLOR",V1$="PRINT 'RGB'"; GOSUB 20200
16865 LET V0$="WINDOW DELETE",V1$="PRINT 'DROP'"; GOSUB 20200
16870 LET V0$="WINDOW FKEYS",V1$="PRINT 'FL',?"; GOSUB 20200
16875 LET V0$="WINDOW IOREGION (DELETE)",V1$="PRINT 'SCROLL'(""RESET"")"; GOSUB 20200
16880 LET V0$="WINDOW MOVE",V1$="PRINT 'MOVE'"; GOSUB 20200
16885 LET V0$="WINDOW POP",V1$="PRINT 'POP'"; GOSUB 20200
16890 LET V0$="WINDOW PUSH",V1$="PRINT 'PUSH'"; GOSUB 20200
16895 LET V0$="WINDOW REFRESH",V1$="PRINT 'RS'"; GOSUB 20200
16900 LET V0$="WINDOW RESIZE",V1$="PRINT 'SIZE'"; GOSUB 20200
16905 LET V0$="WINDOW SCROLL (OFF)",V1$="PRINT 'SCROLL'(""OFF"")"; GOSUB 20200
16910 LET V0$="WINDOW SCROLL (ON)",V1$="PRINT 'SCROLL'(""ON"")"; GOSUB 20200
16915 LET V0$="WINDOW SELECT",V1$="PRINT 'GOTO'"; GOSUB 20200
16920 LET V0$="WINDOW SWAP",V1$="PRINT 'SWAP'"; GOSUB 20200
16925 LET V0$="WINDOW WRAP (OFF)",V1$="PRINT 'WRAP'(""OFF"")"; GOSUB 20200
16930 LET V0$="WINDOW WRAP (ON)",V1$="PRINT 'WRAP'(""ON"")"; GOSUB 20200
16935 IF POS("WINDOW "=Z1$) THEN GOSUB 17000; REM ' parse & convert window commands
16940 LET Z0$=Z0$+Z1$; GOSUB 20100; LET Z0$=Z0$+Z1$; IF Z$>"" THEN GOTO 16510; REM ' build up converted line; continue if not done
16945 LET Z1$=Z0$; REM ' Now do substitutions that include quoted strings
16950 FOR KN=0 TO 15; LET V0$=",KNUM="""+STR(KN)+"""",V1$=",KNUM="+STR(KN); GOSUB 20200; NEXT KN
16955 LET V0$=",MODE?=""DDE""",V1$=",MODE=""DDECLIENT"""; GOSUB 20200
16960 LET V0$=",MODE?=""TEXT""",V1$=",ISZ=-1"; GOSUB 20200
16965 LET Z0$=Z1$
16970 RETURN
17000 REM 17000 - Convert WINDOW CREATE (
17010 LET I=POS("WINDOW CREATE ("=Z1$); IF I=0 THEN GOTO 17070
17020 LET J=POS(")"=Z1$(I)); IF J=0 THEN GOTO 17070
17030 LET C=POS(","=Z1$(I,J),1,0); IF C<>3 THEN GOTO 17070
17040 LET C=POS(","=Z1$(I,J),1,2)
17050 LET Z1$=Z1$(1,I-1)+"PRINT 'WINDOW'("+Z1$(I+C,J-C-1)+","+Z1$(I+15,C-15-1)+"),"+Z1$(I+J)
17060 GOTO 17010
17070 REM - Convert WINDOW IOREGION (CREATE,
17080 LET I=POS("WINDOW IOREGION (CREATE,"=Z1$); IF I=0 THEN GOTO 17140
17090 LET J=POS(")"=Z1$(I)); IF J=0 THEN GOTO 17140
17100 LET C=POS(","=Z1$(I,J),1,0); IF C<>4 THEN GOTO 17140
17110 LET C=POS(","=Z1$(I,J),1,3)
17120 LET Z1$=Z1$(1,I-1)+"PRINT 'SCROLL'("+Z1$(I+C,J-C-1)+","+Z1$(I+24,C-24-1)+"),"+Z1$(I+J)
17130 GOTO 17080
17140 REM  - Convert WINDOW SHAPE (BOX,
17150 LET I=POS("WINDOW SHAPE (BOX,"=Z1$); IF I=0 THEN GOTO 17210
17160 LET J=POS(")"=Z1$(I)); IF J=0 THEN GOTO 17210
17170 LET C=POS(","=Z1$(I,J),1,0); IF C<>4 THEN GOTO 17210
17180 LET C=POS(","=Z1$(I,J),1,3)
17190 LET Z1$=Z1$(1,I-1)+"PRINT 'BOX'("+Z1$(I+C,J-C-1)+","+Z1$(I+18,C-18-1)+"),"+Z1$(I+J)
17200 GOTO 17150
17210 REM  - Convert WINDOW SHAPE (LINE,HORIZONTAL,
17220 LET I=POS("WINDOW SHAPE (LINE,HORIZONTAL,"=Z1$); IF I=0 THEN GOTO 17270
17230 LET J=POS(")"=Z1$(I)); IF J=0 THEN GOTO 17270
17240 LET C=POS(","=Z1$(I,J),1,0); IF C<>4 THEN GOTO 17270
17250 LET Z1$=Z1$(1,I-1)+"PRINT 'BOX'("+Z1$(I+30,J-30-1)+",0),"+Z1$(I+J)
17260 GOTO 17220
17270 REM  - Convert WINDOW SHAPE (LINE,VERTICAL,
17280 LET I=POS("WINDOW SHAPE (LINE,VERTICAL,"=Z1$); IF I=0 THEN GOTO 17340
17290 LET J=POS(")"=Z1$(I)); IF J=0 THEN GOTO 17340
17300 LET C=POS(","=Z1$(I,J),1,0); IF C<>4 THEN GOTO 17340
17310 LET C=POS(","=Z1$(I,J),1,4)
17320 LET Z1$=Z1$(1,I-1)+"PRINT 'BOX'("+Z1$(I+28,C-28)+"0,"+Z1$(I+C,J-C)+","+Z1$(I+J)
17330 GOTO 17280
17340 RETURN
17400 REM 17400 -- CONVERT FOR BB3 AND S10
17410 LET Z0$=""
17420 GOSUB 20000
17430 LET V0$="FID(",V1$="FID?("; GOSUB 20200
17440 LET V0$="FID?(0)",V1$="FID(0)"; GOSUB 20200
17450 LET V0$="ISZ",V1$="ISZ?"; GOSUB 20200
17460 LET Z0$=Z0$+Z1$
17470 GOSUB 20100; LET Z0$=Z0$+Z1$; IF Z$>"" THEN GOTO 17420
17480 RETURN
17500 REM 17500 -- convert for BOSS/VS
17510 LET Z0$=""
17520 GOSUB 20000
17530 LET V0$="FID(",V1$="FID?("; GOSUB 20200
17540 LET V0$="FID?(0",V1$="FID(0"; GOSUB 20200
17550 LET V0$="PGM(0)",V1$="PGM(-1)"; GOSUB 20200
17560 LET V0$="PNM",V1$="PGM(-2)"; GOSUB 20200
17570 LET V0$="PRC",V1$="TCB(14)"; GOSUB 20200
17580 LET V0$="CSW",V1$="SGN(TCB(13))"; GOSUB 20200
17590 LET V0$="OPEN INPUT",V1$="OPEN "; GOSUB 20200
17600 LET V0$="OPEN OUTPUT",V1$="OPEN "; GOSUB 20200
17610 LET V0$="PREFIX",V1$="PREFIX?"; GOSUB 20200
17620 LET V0$="EXIT TO",V1$="EXITTO"; GOSUB 20200
17630 RESTORE 17700
17640 DREAD V0$,ERR=17650; LET V1$=V0$+"(",V0$=V0$+"$("; GOSUB 20200; GOTO 17640
17650 RESTORE 17720
17660 DREAD V1$,ERR=17670; LET V0$=V1$+"$"; GOSUB 20200; GOTO 17660
17670 LET Z0$=Z0$+Z1$
17680 GOSUB 20100; LET Z0$=Z0$+Z1$; IF Z$>"" THEN GOTO 17520
17690 RETURN
17700 DATA "AND","ATH","BIN","CHR","CRC","FID","GAP","HSH"
17710 DATA "IOR","KEY","LRC","NOT","PGM","STR","TBL","XOR",-1
17720 DATA "DAY","PFX","SSN","SYS",-1
18000 REM 18000 -- convert for BB7
18010 LET Z0$=""
18020 GOSUB 20000
18030 LET V0$="FID(",V1$="FID?("; GOSUB 20200
18040 LET V0$="FID?(0",V1$="FID(0"; GOSUB 20200
18050 LET V0$="PGM(0)",V1$="PGM(-1)"; GOSUB 20200
18060 LET V0$="PRC",V1$="TCB(14)"; GOSUB 20200
18070 LET V0$="OPEN INPUT",V1$="OPEN "; GOSUB 20200
18080 LET V0$="OPEN OUTPUT",V1$="OPEN "; GOSUB 20200
18090 LET V0$="PREFIX",V1$="PREFIX?"; GOSUB 20200
18100 LET Z0$=Z0$+Z1$
18110 GOSUB 20100; LET Z0$=Z0$+Z1$; IF Z$>"" THEN GOTO 18020
18120 RETURN
18500 REM 18500,5 -- REXON CONVERT.  PARSE KEYWORDS AND INSERT SPACES
18505 REM -- REMOVE SPACE AFTER VERB
18510 LET Z=POS(" "=Z$,1,2); IF Z>0 THEN LET Z$=Z$(1,Z-1)+Z$(Z+1)
18515 LET Z0$=Z$(1,4),Z$=Z$+" ",Z=5; REM " ADD SPACE TO Z$ FOR CONVENIENCE 
18520 REM " SCAN LOOP 
18525 IF Z>=LEN(Z$) THEN RETURN
18530 LET Z9$=Z$(Z,1)
18535 IF Z9$>="A" AND Z9$<="Z" THEN GOTO 18615
18540 IF Z9$=$22$ OR Z9$="$" OR Z9$="'" THEN GOTO 18560
18545 IF Z9$="!" THEN GOTO 18595
18550 LET Z0$=Z0$+Z9$,Z=Z+1
18555 GOTO 18520
18560 REM " QUOTES, HEX CONSTANT, OR MNEMONIC 
18565 LET Z9=POS(Z9$=Z$(Z),1,2)
18570 IF Z9=0 THEN GOTO 18585
18575 LET Z0$=Z0$+Z$(Z,Z9),Z=Z+Z9
18580 GOTO 18520
18585 LET Z0$=Z0$+Z$(Z),Z=Z+10000
18590 GOTO 18520
18595 REM " BANG ENCOUNTERED 
18600 IF Z>6 THEN LET Z0$=Z0$+"; "
18605 LET Z0$=Z0$+"REM "+Z$(Z+1),Z=Z+10000
18610 GOTO 18520
18615 REM " ALPHA ENCOUNTERED 
18620 REM " TRY FOR KEYWORD 
18625 LET Z1=POS("A">Z$(Z)),Z2=POS("Z"<Z$(Z))
18630 IF Z2>0 AND Z2<Z1 THEN LET Z1=Z2
18635 LET Z1=Z1-1
18640 IF Z1>14 THEN LET Z1=14
18645 IF Z1<2 THEN GOTO 18795
18650 IF POS(Z$(Z,Z1)=K$(O[Z1],L[Z1]),Z1)>0 THEN GOTO 18665
18655 LET Z1=Z1-1
18660 GOTO 18645
18665 LET Z9$=Z$(Z,Z1),Z=Z+Z1
18670 REM " WE HAVE KEYWORD - CHECK FOR SPECIAL CASES 
18675 IF Z9$<>"FOR" OR LEN(Z0$)<6 THEN GOTO 18695
18680 REM " DON'T ALLOW FOR EXCEPT AS FIRST WORD (I.E. IF I=F OR J=K...) 
18685 LET Z=Z-3
18690 GOTO 18795
18695 IF Z9$="TRACE" THEN LET Z9$="SETTRACE"; GOTO 18785
18700 IF Z9$="TRACEOFF" THEN LET Z9$="ENDTRACE"; GOTO 18785
18705 IF Z9$="FID" AND Z$(Z,3)<>"(0)" THEN LET Z9$="FID?"; GOTO 18785
18710 IF Z9$="PGN" THEN LET Z9$="PGM(-1)"; GOTO 18785
18715 IF Z9$="SYS TEM" THEN LET Z9$="RELEASE"; GOTO 18785
18720 IF Z9$="REM" OR Z9$="TABLE" THEN GOTO 18785
18725 IF Z9$="ERS" THEN LET Z9$="TCB(5)"; GOTO 18785
18730 IF Z9$<>"STP" THEN GOTO 18760
18735 LET X=0
18740 IF Z$(Z,1)="(" THEN LET X=X+1 ELSE IF Z$(Z,1)=")" THEN LET X=X-1
18745 LET Z9$=Z9$+Z$(Z,1),Z=Z+1,Z1=Z1+1; IF X THEN GOTO 18740
18750 LET Z9$(1,3)="CVS",Z9$=Z9$(1,LEN(Z9$)-1)+"+1)"
18755 GOTO 18815
18760 IF Z9$<>"FN" THEN GOTO 18815
18765 IF Z$(Z,1)>="A" AND Z$(Z,1)<="Z" THEN LET Z9$=Z9$+Z$(Z,1),Z=Z+1
18770 IF Z$(Z,1)="$" THEN LET Z9$=Z9$+"$",Z=Z+1
18775 LET Z9$=Z9$+"?"
18780 GOTO 18815
18785 LET Z0$=Z0$+Z9$+" "+Z$(Z)
18790 RETURN
18795 REM " TRY FOR VARIABLE 
18800 LET Z9$=Z$(Z,1),Z=Z+1
18805 IF Z$(Z,1)>="0" AND Z$(Z,1)<="9" THEN LET Z9$=Z9$+Z$(Z,1),Z=Z+1
18810 IF Z$(Z,1)="$" THEN LET Z9$=Z9$+"$",Z=Z+1
18815 REM " SEE IF FOLLOWED BY ALPHA OR NUMERIC 
18820 IF (Z$(Z,1)>="0" AND Z$(Z,1)<="9") OR (Z$(Z,1)>="A" AND Z$(Z,1)<="Z") THEN LET Z9$=Z9$+" "
18825 LET Z0$=Z0$+Z9$
18830 GOTO 18520
19000 REM 19000 -- CONVERT FOR PERTEC
19010 LET Z0$=""
19020 GOSUB 20000
19030 REM " Z1$ = CHUNK OF LINE TO EXAMINE
19040 LET V0$="FID(",V1$="FID?("; GOSUB 20200
19050 LET V0$="FID?(0)",V1$="FID(0)"; GOSUB 20200
19060 LET V0$="ORI(",V1$="IOR("; GOSUB 20200
19070 LET V0$="ORX(",V1$="XOR("; GOSUB 20200
19080 LET V0$="PGMDELETE ",V1$="ERASE "; GOSUB 20200
19090 LET V0$="ADD ",V1$="ADDR "; GOSUB 20200
19100 LET V0$="KEYED ",V1$="VKEYED "; GOSUB 20200
19110 LET V0$="ADDF ",V1$="ADDR "; GOSUB 20200
19120 LET V0$="BSAM ",V1$="VKEYED "; GOSUB 20200
19130 LET V0$="'CP'",V1$="'CE'"; GOSUB 20200
19140 LET V0$="ISAM ",V1$="VKEYED "; GOSUB 20200
19150 LET V0$="DIRECT ",V1$="VKEYED "; GOSUB 20200
19160 LET V0$="SORT ",V1$="VKEYED "; GOSUB 20200
19170 LET V0$="FME",V1$="TCB(10)"; GOSUB 20200
19180 LET V0$="NTM",V1$="TIM"; GOSUB 20200
19190 LET V0$="PRECISION",V1$="PRECISION?"; GOSUB 20200
19200 LET V0$="KEC(",V1$="KEYP("; GOSUB 20200
19210 LET V0$="LAB(",V1$="DSK("; GOSUB 20200
19220 LET V0$="WHO",V1$="FID(0)"; GOSUB 20200
19230 LET V0$="VKEYED",V1$="VKEYED?"; GOSUB 20200
19240 LET V0$=" !",V1$=" REM "; GOSUB 20200
19250 LET Z0$=Z0$+Z1$
19260 REM "SEE IF WE'RE DONE
19270 GOSUB 20100; LET Z0$=Z0$+Z1$; IF Z$>"" THEN GOTO 19020
19280 RETURN
19500 REM 19500 -- convert for OpenBASIC
19510 LET Z0$=""
19520 GOSUB 20000
19530 LET V0$="FID(",V1$="FID?("; GOSUB 20200; REM ' Force manual review
19540 LET V0$="FID?(0",V1$="FID(0"; GOSUB 20200
19550 LET V0$="PGM(0)",V1$="PGM(-1)"; GOSUB 20200
19560 LET V0$="PNM",V1$="PGM(-2)"; GOSUB 20200
19570 LET V0$="PRC",V1$="TCB(14)"; GOSUB 20200
19580 LET V0$="CSW",V1$="SGN(TCB(13))"; GOSUB 20200
19590 LET V0$="OPEN INPUT",V1$="OPEN"; GOSUB 20200
19600 LET V0$="PREFIX",V1$="PREFIX?"; GOSUB 20200; REM ' Force manual review
19610 LET V0$="ASCII(",V1$="ASC("; GOSUB 20200
19620 LET V0$="CHAR(",V1$="CHR("; GOSUB 20200
19630 LET V0$="ENDIF",V1$="FI"; GOSUB 20200
19640 LET V0$="FLOATING POINT",V1$="FLOATINGPOINT"; GOSUB 20200
19650 LET V0$="LVL(0)",V1$="REV"; GOSUB 20200
19660 LET V0$="OPTS=",V1$="MODE?="; GOSUB 20200
19670 LET V0$="PSAVE",V1$="SAVEP"; GOSUB 20200
19680 LET V0$="PUB(",V1$="PUB?("; GOSUB 20200; REM ' Force manual review
19690 LET V0$="REM *",V1$="REM ^"; GOSUB 20200
19700 LET V0$="REM KEEP",V1$="REM 0"; GOSUB 20200
19710 LET V0$="TCB(3)",V1$="TCB?(3)"; GOSUB 20200
19720 LET V0$="TCB(8)",V1$="TCB?(8)"; GOSUB 20200
19730 LET V0$="TCB(9)",V1$="TCB?(9)"; GOSUB 20200
19740 LET V0$="TCB(10)",V1$="TCB?(10)"; GOSUB 20200
19750 LET V0$="TCB(11)",V1$="TCB?(11)"; GOSUB 20200
19760 LET V0$="TCB(12)",V1$="TCB?(12)"; GOSUB 20200
19770 LET V0$="TCB(13)",V1$="TCB?(13)"; GOSUB 20200
19780 LET V0$="TCB(14)",V1$="TCB?(14)"; GOSUB 20200
19790 LET V0$="TCB?(10)",V1$="TCB(11)"; GOSUB 20200; REM ' last channel with error
19800 LET V0$="TCB?(11)",V1$="TCB(12)"; GOSUB 20200; REM ' last channel accessed
19810 LET V0$="TCB?(12)",V1$="TCB(10)"; GOSUB 20200; REM ' last host error
19820 LET V0$="TSK(",V1$="TSK?("; GOSUB 20200; REM ' Force manual review
19830 LET V0$="WHO",V1$="INFO(3,2)"; GOSUB 20200
19840 LET V0$="'NL'",V1$="'LF'"; GOSUB 20200; REM ' Newline -> Line Feed
19850 LET V0$="'SN'",V1$="'SP'"; GOSUB 20200; REM ' Screen Normal -> Standard Print
19860 LET V0$="'SW'",V1$="'CP'"; GOSUB 20200; REM ' Screen Wide -> Compressed Print
19870 LET V0$="'TP'",V1$="'RP'"; GOSUB 20200; REM ' Transmit Page -> Read Page
19880 LET Z0$=Z0$+Z1$
19890 GOSUB 20100; LET Z0$=Z0$+Z1$; IF Z$>"" THEN GOTO 19520
19900 RETURN
19910 REM "SEE IF WE'RE DONE
20000 REM 20000 -- SCAN Z$ FOR TEXT SEGMENT Z1$ OUTSIDE QUOTES OR REM
20010 LET Z=POS($22$=Z$); IF Z=0 THEN LET Z1$=Z$,Z$="" ELSE LET Z1$=Z$(1,Z-1),Z$=Z$(Z)
20020 LET Z=POS(" REM "=Z1$); IF Z>0 THEN LET Z$=Z1$(Z)+Z$,Z1$=Z1$(1,Z-1)
20030 RETURN
20100 REM 20100 -- SCAN LEADING QUOTE OR REM FROM Z$ INTO Z1$
20110 IF Z$="" THEN LET Z1$=""; RETURN
20120 IF POS(" REM "=Z$)=1 THEN LET Z1$=Z$,Z$=""; RETURN
20130 IF Z$(1,1)<>$22$ THEN LET Z1$=""; RETURN
20140 LET Z=POS($22$=Z$(2)); IF Z=0 THEN LET Z1$=Z$,Z$="" ELSE LET Z1$=Z$(1,Z+1),Z$=Z$(Z+2)
20150 RETURN
20200 REM 20200 -- REPLACE V0$ TOKENS WITH V1$ IN Z1$
20210 REM ' scan for every occurrence of V0$ in Z1$.  If first character of V0$ is an identifier character, and previous character in Z1$ is also an identifier character, OR last character of V0$ is an idenfier character, and next character in Z1$ is also an identifier character, then we don't have a discrete token, so keep searching.  If we found a discrete token, make the substitution.  When we can't find any more occurrences of V0$ in Z1$, return
20220 LET Z1=1,I$="ABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789.$%"
20230 LET Z=POS(V0$=Z1$(Z1)),Z1=Z1+Z-1; IF Z=0 THEN RETURN
20240 IF (POS(V0$(1,1)=I$) AND Z1>1 AND POS(Z1$(Z1-1,1)=I$)) OR (POS(V0$(LEN(V0$))=I$) AND Z1+LEN(V0$)<LEN(Z1$) AND POS(Z1$(Z1+LEN(V0$),1)=I$)) THEN LET Z1=Z1+LEN(V0$) ELSE LET Z1$=Z1$(1,Z1-1)+V1$+Z1$(Z1+LEN(V0$)),Z1=Z1+LEN(V1$)
20250 GOTO 20230
25000 REM 25000 -- CONVERT KEYS/DATA FOR PARTICULAR SENDER
25010 IF HIBIT$="ALL" THEN DIM Z0$(LEN(Z$),$80$); LET Z$=XOR(Z$,Z0$); RETURN
25020 IF HIBIT$<>"LF" THEN RETURN ELSE IF SENDER$="PRT" THEN GOTO 25060
25030 REM -- CHANGE $8A$ TO $0A$
25040 LET Z=POS($8A$=Z$); IF Z THEN LET Z$(Z,1)=$0A$; GOTO 25040
25050 RETURN
25060 REM -- CHANGE $0D$ TO $0A$
25070 LET Z=POS($0D$=Z$); IF Z THEN LET Z$(Z,1)=$0A$; GOTO 25070
25080 RETURN
25090 END
