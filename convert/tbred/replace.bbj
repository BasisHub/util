REM /**
REM  * replace.bbj
REM  * @author atimm
REM  *
REM  */
use java.util.regex.Pattern
use java.util.regex.Matcher
use java.util.LinkedHashMap
use org.apache.commons.lang3.StringUtils
use java.lang.reflect.Array
use ::pgm.bbj::PgmLine 

replace:
enter z$ 
declare PgmLine p!
p! = new PgmLine(z$) 
z$ = p!.getBBjLine()
exit 


replaceVKEYEDDIRECT: 
    enter z$,filetype$

    beginLine$=z$(1,pos(filetype$=z$)-1)
    if pos(filetype$=z$)=0 then exit endif;createString$=z$(pos(filetype$=z$)) 
       endLine$="" 
        if pos(";"=createString$)>0 then endline$=createString$(pos(";"=createString$))
        if pos(filetype$=createString$)=0 then exit 
        createString$=createString$(pos(filetype$=createString$),pos(";"=createString$)-pos(filetype$=createString$))
        beginVar=pos(filetype$=createString$)+len(filetype$) 
        endVar = pos(","=createString$)-beginVar
        file$=createString$(beginVar,endVar)
        beginVar=pos(","=createString$,1,1)+1
        endVar=pos(","=createString$,1,2)-beginVar 
        keyChainString$=createString$(beginVar,endVar)

                if pos(":["=keyChainString$)>0 then 
          beginVar=1
          endVar = pos(":["=keyChainString$,1,1)-beginVar
          keyName$=keyChainString$(beginVar,endVar)                
          beginVar=pos(":["=keyChainString$)+1
          keyChain$=keyChainString$(beginVar)
        else 
          keyName$="" 
          keyChain$=keyChainString$
        endif 

        nbrec=0
        beginVar=pos(","=createString$,1,3)+1
        endVar = pos(","=createString$,1,4)-beginVar
        reclen$=createString$(beginVar,endVar) 

        beginVar=pos(","=createString$,1,4)+1
        tmp$=createString$(beginVar)
        ok=1
        posChar=0
        for i=1 to len(tmp$)
            if tmp$(i,1)="(" then ok=0;continue 
            if tmp$(i,1)=")" then ok=1;continue 
            if ok and tmp$(i,1)="," then posChar=i;break
        next i 

        dsknum$=createString$(beginVar,poschar-1)
        endVar=poschar
       

        errExit$=str(createString$(pos(","=createString$,-1,1)),err=VNOERR)
        if STR(errExit$(1,len(",ERR=")),err=*next)<>",ERR=" then 
              errExit$=""
          endif  
        VNOERR:
        if keyName$>"" then 
            createString$="VKEYED TB.REPDSK("+dsknum$+")+"+file$+","+keyChain$+",0,"+reclen$+errExit$+";TB.setKeyName(TB.REPDSK("+dsknum$+")+"+file$+",0,"+keyName$+")"
        else 
            createString$="VKEYED TB.REPDSK("+dsknum$+")+"+file$+","+keyChain$+",0,"+reclen$+errExit$
            if fileType$="VKEYED" then createString$=createString$+";TB.setKeyName(TB.REPDSK("+dsknum$+")+"+file$+",0,""0"")" endif 
        endif 
        if pos(filetype$+" "=endline$)>0 then call "replace.bbj::replaceVKEYEDDIRECT",endline$,filetype$ endif
        z$=beginLine$+createString$+endline$
exit 


replaceINDEXEDSORT: 
    enter z$,filetype$
    beginLine$=z$(1,pos(filetype$=z$)-1)
    if pos(filetype$=z$)=0 then exit endif;createString$=z$(pos(filetype$=z$)) 
       endLine$="" 
        if pos(";"=createString$)>0 then endline$=createString$(pos(";"=createString$))
        if pos(filetype$=createString$)=0 then exit 
        createString$=createString$(pos(filetype$=createString$),pos(";"=createString$)-pos(filetype$=createString$))
        beginVar=pos(filetype$=createString$)+len(filetype$) 
        endVar = pos(","=createString$)-beginVar
        file$=createString$(beginVar,endVar)

        beginVar=pos(","=createString$,1,1)+1
        endVar=pos(","=createString$,1,2)-beginVar 
        keyChain$=createString$(beginVar,endVar)

        beginVar=pos(","=createString$,1,2)+1
        endVar = pos(","=createString$,1,3)-beginVar
        reclen$=createString$(beginVar,endVar) 

        beginVar=pos(","=createString$,1,3)+1
        tmp$=createString$(beginVar)
        ok=1
        posChar=0
        for i=1 to len(tmp$)
            if tmp$(i,1)="(" then ok=0;continue 
            if tmp$(i,1)=")" then ok=1;continue 
            if ok and tmp$(i,1)="," then posChar=i;break
        next i 

        dsknum$=createString$(beginVar,poschar-1)
        endVar=poschar



          errExit$=str(createString$(pos(","=createString$,-1,1)),err=INOERR) 
          if str(errExit$(1,len(",ERR=")),err=*next)<>",ERR=" then 
              errExit$=""
          endif 
        INOERR: 

                if filetype$="SORT" then 
        filetype$="VKEYED"
            createString$=filetype$+" TB.REPDSK("+dsknum$+")+"+file$+","+keyChain$+",0,"+reclen$+errExit$
        else 
            createString$=filetype$+" TB.REPDSK("+dsknum$+")+"+file$+","+keyChain$+","+reclen$+errExit$
        endif 
        if pos(filetype$+" "=endline$)>0 then call "replace.bbj::replaceINDEXEDSORT",endline$,filetype$ endif
        z$=beginLine$+createString$+endline$
exit

declare String z!
handleFileCreate: 
        enter z!
        z$=z!     
        if pos("VKEYED "=z$)>0 then call "replace.bbj::replaceVKEYEDDIRECT",z$,"VKEYED" endif        
        if pos("INDEXED "=z$)>0 then call "replace.bbj::replaceINDEXEDSORT",z$,"INDEXED" endif 
        if pos("SORT "=z$)>0 then call "replace.bbj::replaceINDEXEDSORT",z$,"SORT" endif 
        if pos("DIRECT "=z$)>0 then call "replace.bbj::replaceVKEYEDDIRECT",z$,"DIRECT" endif 
        z!=z$
exit 

