REM /**
REM  * replace.bbj
REM  * @author atimm
REM  *
REM  */
replace:
enter z$ 
if pos("ADDSORT"=z$)>0 then call "replace.bbj::replaceADDSORT",z$,"ADDSORT" endif 
if pos("REMSORT"=z$)>0 then call "replace.bbj::replaceREMSORT",z$,"REMSORT" endif 

if pos("BBJ REM"=z$)>0 then
    rem check for linenumbers
    linenumber=num( z$(1,pos(" "=z$,1,1)),err=*next);z$=z$(1,pos(" "=z$)+1)+"REM "+z$(pos(" "=z$,1,1)+1);return  
    z$="REM "+z$;return 
endif 
if pos("LIKE"=Z$)>0 and pos("IF "=Z$)>0 then call "replace.bbj::replaceLike",Z$ endif 



if pos("INDEXED "=z$)>0 or pos("SORT "=z$) or pos("DIRECT "=z$)>0 or pos("VKEYED "=z$) then call "replace.bbj::handleFileCreate",Z$ endif 

call "replace.bbj::replaceNumArray",Z$

declare String z! 
z! = z$ 

call "replace.bbj::replaceENV",z!
rem mode LINK - not used ORACLE 
z!=z!.replaceAll("MODE\?=""LINK","MODE=""LINK") 
z!=z!.replaceAll("GRAPH=ASC\(PGCHARBASE\)","GRAPH=ASC(stbl(""!PGCHARBASE""))") 
z!=z!.replaceAll("FINPUT \(0,ATR=$05$+CHR\(COLN\)+CHR\(LIGN\)+CHR\(LONG_AFF\)+CHR\(LONG_SAI\),ERR=xxxxx\) E$","CALL ""DB%FINPUT"",ERR=xxxxx,COLN,LIGN,LONG_AFF,LONG_SAI,0,"""",E$,FCT")
z!=z!.replaceAll("FINPUT \(0,ATR=$05$+CHR\(COLN\)+CHR\(LIGN\)+CHR\(LONG_AFF\)+CHR\(LONG_SAI\),EDT=VEDT$,ERR=xxxxx\) E$","CALL ""DB%FINPUT"",ERR=xxxxx,COLN,LIGN,LONG_AFF,LONG_SAI,0,VEDT$,E$,FCT")
z!=z!.replaceAll("FINPUT \(0,ATR=$05$+CHR\(COLN\)+CHR\(LIGN\)+CHR\(LONG_AFF\)+CHR\(LONG_SAI\),EDT=VEDT$,TIM=TPS_TIMER,ERR=xxxxx\) E$","CALL ""DB%FINPUT"",ERR=xxxxx,COLN,LIGN,LONG_AFF,LONG_SAI,TPS_TIMER,VEDT$,E$,FCT")

z$=z!
exit 


replaceLike: 
    enter z$
    if pos("IF "=z$)=0 or pos("THEN"=z$)=0 then exit 

    lineBegin$=z$(1,pos("IF "=z$,1,1)-1) 
    beginIF=pos("IF "=z$,1,1)
    end_IF=pos("THEN"=z$,1,1)+4-beginIF
    statement$=z$(beginIF,end_IF) 
    if len(z$)>pos("THEN"=z$,1,1)+3+1 then 
    lineEnd$=z$(pos("THEN"=z$,1,1)+3+1)
    endif 

    beginVar=pos(" "=statement$,1,1)
    endVar=(pos("LIKE"=statement$,1,1)-1)-beginVar
    var1$=statement$(beginVar,endVar) 
    beginVar=pos("LIKE"=statement$)+4
    endVar=(pos("THEN"=statement$,1,1)-1)-beginVar
    var2$=statement$(beginVar,endVar) 



       if pos(" LIKE "=lineEnd$)>0 then call "replace.bbj::replaceLike",lineEnd$
              z$=lineBegin$+" IF TB.LIKE("+var1$+","+var2$+") THEN "+lineend$
       exit 



replaceENV: 
    enter z!
        rem  replace global vars like ]USER$ -> ENV_USER$
        z!=z!.replaceAll("\](?=\b\w+)\b","_")    
        REM replace QUO WITH """ 
        z!=z!.replaceAll("(?<=\+)QUO|QUO(?=\+)|(?<=\+)QUO(?=\+)","""") 
    exit 

replaceNumArray: 
      enter z$ 
      beginVar=pos("DIM "=z$) 
      if beginVar=0 then exit 
      tmp$=z$(beginVar) 
      if pos(";"=tmp$)>0 then 
              endVar=pos(";"=tmp$)
      else 
              endVar=len(tmp$) 
      endif 
      endVar=endVar-beginVar 
      var$=z$(beginVar,endVar) 

            if pos("("=var$)>0 and pos(")"=var$)>0 then 
            rem ?var$(1,pos("("=var$)-1)+"["+var$(pos("("=var$)+1,pos(")"=var$)-(pos("("=var$)+1))+"]"+var$(pos(")"=var$)+1)
            var$=var$(1,pos("("=var$)-1)+"["+var$(pos("("=var$)+1,pos(")"=var$)-(pos("("=var$)+1))+"]"+var$(pos(")"=var$)+1)
      endif 
exit 




replaceVKEYEDDIRECT: 
    enter z$,filetype$
    beginLine$=z$(1,pos(filetype$=z$)-1)
    if pos(filetype$=z$)=0 then exit endif;createString$=z$(pos(filetype$=z$)) 
       endLine$="" 
        if pos(";"=createString$)>0 then endline$=createString$(pos(";"=createString$))
        if pos(filetype$=createString$)=0 then exit 
        createString$=createString$(pos(filetype$=createString$),pos(";"=createString$)-pos(filetype$=createString$))
        beginVar=pos(filetype$=createString$)+len(filetype$) 
        endVar = pos(","=createString$)-beginVar
        file$=createString$(beginVar,endVar)

        beginVar=pos(","=createString$,1,1)+1
        endVar=pos(","=createString$,1,2)-beginVar 
        keyChainString$=createString$(beginVar,endVar)

        if pos(":"=keyChainString$)>0 then 
          beginVar=1
          endVar = pos(":"=keyChainString$,1,1)-beginVar
          keyName$=keyChainString$(beginVar,endVar)                
          beginVar=pos(":"=keyChainString$)+1
          keyChain$=keyChainString$(beginVar)
        else 
          keyName$="" 
          keyChain$=keyChainString$
        endif 

        nbrec=0
        beginVar=pos(","=createString$,1,3)+1
        endVar = pos(","=createString$,1,4)-beginVar
        reclen$=createString$(beginVar,endVar) 

        beginVar=pos(","=createString$,1,4)+1
        endVar = pos(","=createString$,1,5)-beginVar
        dsknum$=createString$(beginVar,endVar)

        if keyName$>"" then 
            createString$=filetype$+" TB.REPDSK("+dsknum$+")+"+file$+","+keyChain$+",0,"+reclen$+";TB.setKeyName(TB.REPDSK("+dsknum$+")+"+file$+",0,"+keyName$+")"
        else 
            createString$=filetype$+" TB.REPDSK("+dsknum$+")+"+file$+","+keyChain$+",0,"+reclen$
            if fileType$="VKEYED" then createString$=createString$+";TB.setKeyName(TB.REPDSK("+dsknum$+")+"+file$+",0,""0"")" endif 
        endif 
        if pos(filetype$+" "=endline$)>0 then call "replace.bbj::replaceVKEYEDDIRECT",endline$,filetype$ endif
        z$=beginLine$+createString$+endline$
exit 


replaceINDEXEDSORT: 
    enter z$,filetype$
    beginLine$=z$(1,pos(filetype$=z$)-1)
    if pos(filetype$=z$)=0 then exit endif;createString$=z$(pos(filetype$=z$)) 
       endLine$="" 
        if pos(";"=createString$)>0 then endline$=createString$(pos(";"=createString$))
        if pos(filetype$=createString$)=0 then exit 
        createString$=createString$(pos(filetype$=createString$),pos(";"=createString$)-pos(filetype$=createString$))
        beginVar=pos(filetype$=createString$)+len(filetype$) 
        endVar = pos(","=createString$)-beginVar
        file$=createString$(beginVar,endVar)

        beginVar=pos(","=createString$,1,1)+1
        endVar=pos(","=createString$,1,2)-beginVar 
        keyChain$=createString$(beginVar,endVar)

         beginVar=pos(","=createString$,1,2)+1
        endVar = pos(","=createString$,1,3)-beginVar
        reclen$=createString$(beginVar,endVar) 

        beginVar=pos(","=createString$,1,3)+1
        endVar = pos(","=createString$,1,4)-beginVar
        dsknum$=createString$(beginVar,endVar)

        createString$=filetype$+" TB.REPDSK("+dsknum$+")+"+file$+","+keyChain$+","+reclen$

        if pos(filetype$+" "=endline$)>0 then call "replace.bbj::replaceINDEXEDSORT",endline$,filetype$ endif
        z$=beginLine$+createString$+endline$
exit


handleFileCreate: 
        enter z$ 
        if pos("VKEYED "=z$)>0 then call "replace.bbj::replaceVKEYEDDIRECT",z$,"VKEYED" endif        
        if pos("INDEXED "=z$)>0 then call "replace.bbj::replaceINDEXEDSORT",z$,"INDEXED" endif 
        if pos("SORT "=z$)>0 then call "replace.bbj::replaceINDEXEDSORT",z$,"SORT" endif 
        if pos("DIRECT "=z$)>0 then call "replace.bbj::replaceVKEYEDDIRECT",z$,"DIRECT" endif        
exit 



replaceADDSORT: 
    enter z$,keyword$
    beginLine$=z$(1,pos(keyword$=z$)-1)
    if pos(keyword$=z$)=0 then exit endif;createString$=z$(pos(keyword$=z$)) 
       endLine$="" 
        if pos(";"=createString$)>0 then endline$=createString$(pos(";"=createString$))
        if pos(keyword$=createString$)=0 then exit 
        createString$=createString$(pos(keyword$=createString$),pos(";"=createString$)-pos(keyword$=createString$))
        beginVar=pos(keyword$=createString$)+len(keyword$) 
        endVar = pos(","=createString$)-beginVar
        file$=createString$(beginVar,endVar)

        beginVar=pos(","=createString$,1,1)+1
        endVar=pos(","=createString$,1,2)-beginVar 
        keyChainString$=createString$(beginVar,endVar)

        if pos(":"=keyChainString$)>0 then 
          beginVar=1
          endVar = pos(":"=keyChainString$,1,1)-beginVar
          keyName$=keyChainString$(beginVar,endVar)                
          beginVar=pos(":"=keyChainString$)+1
          keyChain$=keyChainString$(beginVar)
        else 
          keyName$="" 
          keyChain$=keyChainString$
        endif 

        beginVar=pos(","=createString$,1,2)+1
        endVar = pos(","=createString$,1,3)-beginVar
        dsknum$=createString$(beginVar,endVar)

        if keyName$="" then keyName$="""0"""
        
        keyChain! = keyChain$ 
        keyChain$ = keyChain!.replaceAll("""","""""") 
        createString$="TB."+keyword$+"(TB.REPDSK("+dsknum$+")+"+file$+","+keyName$+","""+keyChain$+""")"

        if pos(keyword$+" "=endline$)>0 then call "replace.bbj::replaceADDSORT",endline$,keyword$ endif
        z$=beginLine$+createString$+endline$
exit 


replaceREMSORT: 
    enter z$,keyword$
    beginLine$=z$(1,pos(keyword$=z$)-1)
    if pos(keyword$=z$)=0 then exit endif;createString$=z$(pos(keyword$=z$)) 
       endLine$="" 
        if pos(";"=createString$)>0 then endline$=createString$(pos(";"=createString$))
        if pos(keyword$=createString$)=0 then exit 
        createString$=createString$(pos(keyword$=createString$),pos(";"=createString$)-pos(keyword$=createString$))
        beginVar=pos(keyword$=createString$)+len(keyword$) 
        endVar = pos(","=createString$)-beginVar
        file$=createString$(beginVar,endVar)

        beginVar=pos("SRT="=createString$,1,1)+4
        endVar=pos(","=createString$,1,2)-beginVar 
        keyName$=createString$(beginVar,endVar)


        createString$="TB."+keyword$+"("+file$+","+keyName$+")"

        if pos(keyword$+" "=endline$)>0 then call "replace.bbj::replaceREMSORT",endline$,keyword$ endif
        z$=beginLine$+createString$+endline$
exit 

